{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","Axios","delete","console","log","name","email","className","onClick","style","cursor","float","color","bind","to","marginRight","phone","Contacts","Fragment","map","key","Header","branding","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","match","params","updContact","put","then","App","basename","process","exact","path","component","About","NotFound","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.15ac0ae3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [\r\n          action.payload,\r\n          ...state.contacts.filter(contact => contact.id !== action.payload.id)\r\n        ]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport Axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await Axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}\r\n                <i\r\n                  className=\"fas fa-sort-down ml-2\"\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">\r\n                    Phone: {this.props.contact.phone}\r\n                  </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    // <div>\r\n    //   <h1 style={{ color: \"red\", fontSize: \"50px\" }}>{props.branding}</h1>\r\n    //   <p style={paraStyle}>This is a contact manager</p>\r\n    // </div>\r\n\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3\">\r\n      <div className=\"container\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          {branding}\r\n        </Link>\r\n\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\"></i> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\"></i> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\"></i> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\n// const paraStyle = {\r\n//   color: \"green\",\r\n//   textDecoration: \"underline\"\r\n// };\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      <div className=\"invalid-feedback\">{error}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\n// import uuid from \"uuid\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport Axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: \"\"\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is Required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is Required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is Required\" } });\r\n      return;\r\n    }\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await Axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    name=\"name\"\r\n                    label=\"Name:\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    name=\"email\"\r\n                    label=\"Email:\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    type=\"email\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    name=\"phone\"\r\n                    label=\"Phone:\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-block btn-light\"\r\n                    value=\"Add Contact\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\n// import uuid from \"uuid\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport Axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: \"\"\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  //if we use async way, the form will open only when data is returned from api. In below scenario, form will open and values will update once data comes form field.\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    Axios.get(`https://jsonplaceholder.typicode.com/users/${id}`).then(res => {\r\n      this.setState({\r\n        name: res.data.name,\r\n        email: res.data.email,\r\n        phone: res.data.phone\r\n      });\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is Required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is Required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is Required\" } });\r\n      return;\r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    Axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    ).then(res => dispatch({ type: \"UPDATE_CONTACT\", payload: res.data }));\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    name=\"name\"\r\n                    label=\"Name:\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    name=\"email\"\r\n                    label=\"Email:\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    type=\"email\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    name=\"phone\"\r\n                    label=\"Phone:\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-block btn-light\"\r\n                    value=\"Update Contact\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <>\r\n      <h1 className=\"diaplay-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple App to manage Contacts</p>\r\n      <p className=\"text-secondary\">Version : 1.0.0</p>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Not Found\r\n      </h1>\r\n      <p className=\"lead\">Page You are looking for is not available.</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Contacts from \"./components/contacts/Contacts\";\r\nimport Header from \"./components/layout/Header\";\r\nimport AddContact from \"./components/contacts/AddContact\";\r\nimport EditContact from \"./components/contacts/EditContact\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Provider } from \"./context\";\r\nimport About from \"./components/pages/About\";\r\nimport NotFound from \"./components/pages/NotFound\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nfunction App() {\r\n  return (\r\n    <Provider>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <div className=\"App\">\r\n          <Header branding=\"Contact Manager\" />\r\n\r\n          <div className=\"container\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Contacts} />\r\n              <Route exact path=\"/about\" component={About} />\r\n              <Route exact path=\"/contact/add\" component={AddContact} />\r\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}